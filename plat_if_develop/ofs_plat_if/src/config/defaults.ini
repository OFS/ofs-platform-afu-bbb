;;
;; Defaults for all interface classes.
;;
;; Defaults are loaded hierarchically. If present, generic interface
;; classes such as "host_chan" are loaded. Then, implementation-specific
;; values are loaded. (E.g. "host_chan.native_ccip".)
;;
;; These configuration parameters are parsed by
;; scripts/platlib/ofs_plat_cfg.py.
;;


;; ========================================================================
;;
;;  Preprocessor definitions
;;     Platforms may use this section to define preprocessor macros
;;     to a platform. Unlike other sections, these macros are generated
;;     as-is without an OFS_PLAT_PARAM prefix.
;;
;; ========================================================================

[define]


;; ========================================================================
;;
;;  Clocks
;;
;; ========================================================================

[clocks]
pclk_freq=250


;; ========================================================================
;;
;;  Host channel defaults
;;
;; ========================================================================

[host_chan]
num_ports=1

;; Boolean (0/1) indicating whether the platform supports byte-enable
;; to update only a portion of a cache line.
byte_en_supported=0

;; DMA host address space accessed by the accelerator. For a typical
;; PCIe device, this is "IOADDR". An accelerator with direct access
;; to host physical memory should be set to "HPA".
address_space="IOADDR"

[host_chan.native_ccip]
;; Masks of request classes supported by the platform.
;; The required enumeration is defined in ccip_cfg_pkg.sv
c0_supported_reqs=(C0_REQ_RDLINE_S | C0_REQ_RDLINE_I)
c1_supported_reqs=(C1_REQ_WRLINE_S | C1_REQ_WRLINE_I | C1_REQ_WRFENCE | C1_REQ_INTR)

;; Boolean (0/1) properties of whether each virtual channel
;; is supported by the platform, indexed by t_ccip_vc.
vc_supported={ 1, 1, 1, 1 }
;; Default channel an AFU should use.
vc_default=0
;; num_phys_channels must equal the number of available channels
;; with 1's in vc_supported (excluding the eVC_VA slot 0).
num_phys_channels=3

;; Boolean (0/1) properties of whether each possible request size
;; is supported by the platform, indexed by t_ccip_clLen.
cl_len_supported={ 1, 1, 0, 1 }

;; Minimum number of outstanding lines that must be in flight to
;; saturate bandwidth on each virtual channel. (Index of the parameter
;; is the virtual channel number.)  Maximum bandwidth is typically a
;; function of the number lines in flight, indepent of request sizes.
max_bw_active_lines_c0={ 512, 512, 256, 256 }
max_bw_active_lines_c1={ 512, 256, 128, 128 }

max_outstanding_mmio_rd_reqs=64

;; CCI-P requires that an AFU register both the request and response
;; signals before any combinational logic. We expect that this value
;; will be 1 on all platforms, reflecting the expectation that an AFU
;; will register CCI-P Tx and Rx signals according to the CCI-P spec.
suggested_timing_reg_stages=1

[host_chan.native_avalon]
addr_width=42
data_width=512
burst_cnt_width=7

;; Minimum number of outstanding lines that must be in flight to
;; saturate bandwidth Maximum bandwidth is typically a function
;; of the number lines in flight, indepent of burst sizes.
max_bw_active_lines_rd=256
max_bw_active_lines_wr=128

;; Like the same field in CCI-P, this is the recommended number
;; of times an AFU should register host channel signals before use
;; in order to make successful timing closure likely.
;;
;; When a host channel clock crossing is also requested,
;; at least the suggested number of timing register stages are
;; always inserted between the clock crossing and the AFU. This
;; is done because adding registers along with a clock crossing is
;; relatively inexpensive.
suggested_timing_reg_stages=0

;; OFS adds a user field to the Avalon interface that may be used
;; for private signalling between nearby pipeline stages. User_width
;; defines the number of user bits from requests that are preserved
;; and returned along with responses. This is just a declaration for
;; the connection to the platform intself. The OFS PIM stack is not
;; guaranteed to preserve these user bits for an AFU.
;;
;; An unusual Avalon interface may return results out of order,
;; using the user field as a tag to match responses to requests.
;; Platforms with out of order Avalon interfaces should declare the
;; property "out_of_order=1" in their platform-specific .ini file.
;; The field is not defined here so that
;;    `ifdef OFS_PLAT_PARAM_..._OUT_OF_ORDER
;; can be used.
user_width=0

;; ========================================================================
;;
;;  Local memory defaults
;;
;; ========================================================================

[local_mem]
num_banks=2
addr_width=26
data_width=512
burst_cnt_width=7

;; Like the same field in CCI-P, this is the recommended number
;; of times an AFU should register local memory signals before use
;; in order to make successful timing closure likely.
;;
;; When a local memory clock crossing is also requested,
;; at least the suggested number of timing register stages are
;; always inserted between the clock crossing and the AFU. This
;; is done because adding registers along with a clock crossing is
;; relatively inexpensive.
suggested_timing_reg_stages=0


;; ========================================================================
;;
;;  HSSI defaults
;;
;; ========================================================================

[hssi]
num_ports=1

;; HSSI bandwidth variants available
bandwidth_offered=( HSSI_BW_4x10G | HSSI_BW_40G )

;; Configuration of the raw HSSI interface. Raw HSSI lanes may
;; map to one or more MACs, depending on the active mode.
raw_num_lanes=4
raw_lane_width=128
